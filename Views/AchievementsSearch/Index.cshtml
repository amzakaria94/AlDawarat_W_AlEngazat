@{
    ViewData["Title"] = "بحث الإنجازات";
}

<div class="container w-fit">
    <h2 class="text-center">بحث الإنجازات</h2>
    <hr class="" />
</div>

<div class="container">
    <form method="post">
        <div class="row">
            <div class="col-md-3">
                <h5>الفترة الأولى:</h5>
                <hr />
                <label>من</label>
                <input type="date" name="fromDate1" class="form-control" required>
                <label>إلى</label>
                <input type="date" name="toDate1" class="form-control" required>
            </div>
            <div class="col-md-3">
                <h5>الفترة الثانية:</h5>
                <hr />
                <label>من</label>
                <input type="date" name="fromDate2" class="form-control" required>
                <label>إلى</label>
                <input type="date" name="toDate2" class="form-control" required>
            </div>
        </div>

        <button type="submit" class="btn btn-primary mt-3 shadow">بحث</button>
    </form>
</div>

<hr class="mb-0 col-md-6 border border-dark border-1" />

@if (ViewBag.Achievements1 != null && ViewBag.Achievements2 != null) {
    <div class="mt-4 ">
        <div class="w-fit">
            <h4>نتائج البحث</h4>
            <hr />
        </div>

        <div class="row">
            <div class="col-md-6">
                <h5>الفترة الأولى: <strong>@ViewBag.FromDate1 - @ViewBag.ToDate1</strong></h5>
                <p>
                    عدد الإنجازات:
                    <strong class="toggle-list" data-target="achievementsList1" style="cursor:pointer; color:blue;">
                        @ViewBag.Count1
                    </strong>
                </p>
                <ol id="achievementsList1" style="display:none;">
                    @foreach (var achievement in ViewBag.Achievements1) {
                        <li>@achievement.Title - @achievement.StartDate.ToShortDateString()</li>
                    }
                </ol>
            </div>

            <div class="col-md-6">
                <h5>الفترة الثانية: <strong>@ViewBag.FromDate2 - @ViewBag.ToDate2</strong></h5>
                <p>
                    عدد الإنجازات:
                    <strong class="toggle-list" data-target="achievementsList2" style="cursor:pointer; color:blue;">
                        @ViewBag.Count2
                    </strong>
                </p>
                <ol id="achievementsList2" style="display:none;">
                    @foreach (var achievement in ViewBag.Achievements2) {
                        <li>@achievement.Title - @achievement.StartDate.ToShortDateString()</li>
                    }
                </ol>
            </div>
        </div>

        <h5 class="text-center mt-3">النسبة بين الفترتين: <strong id="percentageDiff"></strong> %</h5>

        <button id="drawChartBtn" class="btn btn-success mt-3">رسم بياني</button>
        <div class="container d-flex justify-content-between">
            <div class="w-50">
                <canvas id="achievementChart" width="200" height="100" style="display:none;"></canvas>
            </div>
            <div class="w-25">
                <canvas id="achievementChartPie" width="25" height="25" style="display:none;"></canvas>
            </div>
        </div>
    </div>
}

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>

    document.querySelectorAll('.toggle-list').forEach(item => {
        item.addEventListener('click', function () {
            var targetId = this.getAttribute('data-target')
            var targetElement = document.getElementById(targetId)
            targetElement.style.display = targetElement.style.display === "none" ? "block" : "none"
        })
    });
    // Function to handle chart creation
    document.getElementById('drawChartBtn').addEventListener('click', function () {
        var ctxBar = document.getElementById('achievementChart').getContext('2d');
        var ctxPie = document.getElementById('achievementChartPie').getContext('2d');

        // Show charts when the button is clicked
        document.getElementById('achievementChart').style.display = 'block';
        document.getElementById('achievementChartPie').style.display = 'block';

        // Ensure any existing charts are destroyed before creating new ones
        if (window.barChartInstance) {
            window.barChartInstance.destroy();
        }
        if (window.pieChartInstance) {
            window.pieChartInstance.destroy();
        }

        // Get the count of achievements
        var count1 = @ViewBag.Count1;
        var count2 = @ViewBag.Count2;
        var totalCounts = count1 + count2;

        // Ensure the dates are correctly formatted as JavaScript Date objects
        var date1End = new Date('@ViewBag.ToDate1');
        var date2End = new Date('@ViewBag.ToDate2');

        // Compare the counts for the two periods
        var recentCount = date2End > date1End ? count2 : count1;
        var previousCount = date2End > date1End ? count1 : count2;

        // Calculate the percentage difference
        var recentCountPercentage = (recentCount / (recentCount + previousCount)) * 100;
        var previousCountPercentage = (previousCount / (recentCount + previousCount)) * 100;

        // If the previous period has zero achievements, set the difference to 0
        var percentageDiff = previousCount > 0 ? `${count1/(totalCounts) * 100} : ${count2/totalCounts * 100}` : '0';
        document.getElementById('percentageDiff').innerText = percentageDiff;

        // Bar chart configuration
        window.barChartInstance = new Chart(ctxBar, {
            type: 'bar',
            data: {
                labels: ['الفترة الاولي', 'الفترة الثانية'],
                datasets: [{
                    label: 'عدد الإنجازات',
                    data: [count1, count2],
                    backgroundColor: ['rgba(75, 192, 192, 0.5)', 'rgba(255, 99, 132, 0.5)'],
                    borderColor: ['rgba(75, 192, 192, 1)', 'rgba(255, 99, 132, 1)'],
                    borderWidth: 1,
                    barPercentage: 0.3,
                    categoryPercentage: 0.5
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            stepSize: 1
                        }
                    }
                }
            }
        });

        // Pie chart configuration
        window.pieChartInstance = new Chart(ctxPie, {
            type: 'pie',
            data: {
                labels: ['الفترة الاولي', 'الفترة الثانية'],
                datasets: [{
                    label: 'عدد الإنجازات',
                    data: [count1, count2],
                    backgroundColor: ['rgba(75, 192, 192, 0.5)', 'rgba(255, 99, 132, 0.5)'],
                    borderColor: ['rgba(75, 192, 192, 1)', 'rgba(255, 99, 132, 1)'],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    tooltip: {
                        callbacks: {
                            label: function (context) {
                                return context.label + ': ' + context.raw;
                            }
                        }
                    }
                }
            }
        });
    });
</script>